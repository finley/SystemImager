#!/bin/bash
# 
#    vi:set filetype=bash et ts=4:
#
#    This file is part of SystemImager.
#
#    SystemImager is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 2 of the License, or
#    (at your option) any later version.
#
#    SystemImager is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with SystemImager. If not, see <https://www.gnu.org/licenses/>.
#
#    Copyright (C) 2017-2019 Olivier LAHAYE <olivier.lahaye1@free.fr>
#
#    Purpose:
#      This file hosts functions realted to rhel specific network configuration.
#      Variable explanation here: /usr/share/doc/initscripts-*/sysconfig.txt
#
#      NetworkManager variables described here:
#      https://developer.gnome.org/NetworkManager/stable/nm-settings-ifcfg-rh.html
#      VÃ©rifier default route variable nalme
#

_check_network_config() {
	mkdir -p /tmp/ifcfg # Make sure this directory exists before writing to it.
			    # /tmp/ifcfg is scanned by 45ifcfg dracut module. All interfaces present in this
			    # directory won't be taken into account by this module.
	case "${IF_CONTROL}" in
		legacy)
			test ! -d /sysroot/etc/sysconfig/network-scripts && logwarn "/etc/sysconfig/network-scripts not present in image."
			mkdir -p  /sysroot/etc/sysconfig/network-scripts # Make sure this path exists.
			;;
		NetworkManager)
			if test ! -x /sysroot/usr/sbin/NetworkManager
			then
				logwarn "/usr/sbin/NetworkManager unavailable in client."
				logwarn "Falling back to legacy config."
				IF_CONTROL="legacy"
			fi
			test ! -d /sysroot/etc/sysconfig/network-scripts && logwarn "/etc/sysconfig/network-scripts not present in image."
			mkdir -p  /sysroot/etc/sysconfig/network-scripts # Make sure this path exists.
			;;
		systemd)
			test ! -x /sysroot/usr/bin/networkctl && shellout "/usr/bin/networkctl unavailable in client. Network may not start!"
			test ! -d /sysroot/etc/systemd/network/ && logwarn "/etc/systemd/network/ missing in client"
			;;
		*)
			shellout "BUG: xsd allows [${IF_CONTROL}] as network management mechanism but it is not handled by code. Please report!"
	esac
}

_write_primary() {
	_check_interface
	case "${IF_CONTROL}" in
		legacy|NetworkManager)
			# Create the config file, removing all lines ending with "=" sign or empty value (="") (parameter not set don't need to be set)
			test -f /sysroot/etc/sysconfig/network-scripts/ifcfg-${IF_NAME} && logwarn "Overwriting /sysroot/etc/sysconfig/network-scripts/ifcfg-${IF_NAME}"
			loginfo "Writing ifcfg-${IF_NAME} connection configuration file (device: ${IF_DEV})"
			sed -E '/.*=(|"")$/d' > /sysroot/etc/sysconfig/network-scripts/ifcfg-${IF_NAME} <<EOF
# Generated by SystemImager (for dev=${IF_DEV})
DEVICE=${IF_DEV}
NM_CONTROLLED=$(test "${IF_CONTROL}" = "legacy" && echo no || echo yes)
HWADDR=${IF_HWADDR}
MACADDR=${IF_MACADDR}
TYPE=${IF_TYPE}
PROXY_METHOD=none
BROWSER_ONLY=no
ONBOOT=${IF_ONBOOT}
BOOTPROTO=${IF_BOOTPROTO}
BONDING_MASTER=$(test "${IF_TYPE}" = "Bond" && echo "yes")
DEFROUTE=${IF_DEFROUTE}
IPV4_FAILURE_FATAL=${IF_IPV4_FAILURE_FATAL}
IPADDR=${IF_IPADDR}
NETMASK=${IF_NETMASK}
PREFIX=${IF_PREFIX}
BROADCAST=${IF_BROADCAST}
GATEWAY=${IF_GATEWAY}
IPV4_ROUTE_METRIC=${IF_IPV4_ROUTE_METRIC}
PEERDNS=${IF_PEERDNS}
MTU=${IF_MTU}
DNS1=${IF_DNS1}
DNS2=${IF_DNS2}
DNS3=${IF_DNS3}
DOMAIN="${IF_DOMAIN}"
IPV6INIT=${IF_IPV6_INIT}
IPV6_FAILURE_FATAL=${IF_IPV6_FAILURE_FATAL}
IPV6_AUTOCONF=${IF_IPV6_AUTOCONF}
IPV6ADDR=${IF_IPV6_ADDR}
IPV6_DEFAULTGW=${IF_IPV6_DEFAULTGW}
IPV6_DEFROUTE=${IF_IPV6_DEFROUTE}
IPV6_PEERDNS=${IF_IPV6_PEERDNS}
IPV6_MTU=${IF_IPV6_MTU}
IPV6_ROUTE_METRIC=${IF_IPV6_ROUTE_METRIC}
NAME=${IF_NAME}
BONDING_OPTS="${IF_BONDING_OPTS}"
UUID=${IF_UUID}
EOF

			# Tell dracut module 45ifcfg not to create config for this device in pre-pivot hook
			cp /sysroot/etc/sysconfig/network-scripts/ifcfg-${IF_NAME} /tmp/ifcfg/ifcfg-$IF_NAME
			;;
		systemd)
			if test "${IF_TYPE}" = "Bond"
			then
				# Create the virtual device.
				loginfo "Writing ${IF_NAME}.netdev virtual bonding device configuration file."
				sed -E '/.*=(|"")$/d' > /sysroot/etc/systemd/network/${IF_NAME}.netdev <<EOF
[Match]

[Netdev]
Description="Bonding interface"
Name=${IF_DEV}
Kind=bond

[Bond]
Mode=${IF_BOND_MODE} # Not yet supported by systemimager defaults to balance-rr (see systemd.netdev(5))

EOF
			fi
			loginfo "Writing ${IF_NAME}.conf connection configuration file (device: ${IF_DEV})"
			sed -E '/.*=(|"")$/d' > /sysroot/etc/systemd/network/${IF_NAME}.network <<EOF
[Match]
Name=${IF_DEV}
MACAddress=${IF_HWADDR}
$(test "$IF_TYPE" != "Bond" && echo "Type=${IF_TYPE}")

[Link]
MACAddress=${IF_MACADDR}
MTUBytes=${IF_MTU}
RequiredForOnline=${IF_ONBOOT}

[Network]
DHCP=$(test "$IF_BOOTPROTO" = "dhcp" && echo yes)
Gateway=${IF_GATEWAY}
DNS=${IF_DNS1}
DNS=${IF_DNS2}
DNS=${IF_DNS3}
Domains=${IF_DOMAIN}
EOF

test -n "${IF_IPADDR}" && sed -E '/.*=(|"")$/d' >> /sysroot/etc/systemd/network/${IF_NAME}.network <<EOF

[Address]
Address=${IF_IPADDR}
Broadcast=${IF_BROADCAST}
EOF
			# TODO: ipv6
			;;
		*)
			shellout "BUG: xsd allows [${IF_CONTROL}] as network management mechanism but it is not handled by code. Please report!"
			# ERROR
			;;
	esac
}

_write_alias() {
	_check_interface
	case "${IF_CONTROL}" in
		legacy) # Create specifi alias config file (ifcfg-<device>:<id>)
			test -f /sysroot/etc/sysconfig/network-scripts/ifcfg-${IF_NAME}:${IF_ID} && logwarn "Overwriting /sysroot/etc/sysconfig/network-scripts/ifcfg-${IF_NAME}:${IF_ID}"
			loginfo "Writing ${IF_NAME}:${IF_ID} connection configuration file (device: ${IF_DEV})"
			sed -E '/.*=(|"")$/d' > /sysroot/etc/sysconfig/network-scripts/ifcfg-${IF_NAME}:${IF_ID} <<EOF
# Generated by SystemImager (for dev=${IF_DEV})
DEVICE=${IF_DEV}:${IF_ID}
NM_CONTROLLED=no
TYPE=${IF_TYPE}
ONBOOT=${IF_ONBOOT}
ONPARENT=${IF_ONPARENT}
BOOTPROTO=static
IPV4_FAILURE_FATAL=${IF_IPV4_FAILURE_FATAL}
IPADDR=${IF_IPADDR}
NETMASK=${IF_NETMASK}
PREFIX=${IF_PREFIX}
BROADCAST=${IF_BROADCAST}
GATEWAY=${IF_GATEWAY}
IPV4_ROUTE_METRIC=${IF_IPV4_ROUTE_METRIC}
MTU=${IF_MTU}
IPV6INIT=${IF_IPV6_INIT}
IPV6_FAILURE_FATAL=${IF_IPV6_FAILURE_FATAL}
IPV6_AUTOCONF=${IF_IPV6_AUTOCONF}
IPV6ADDR=${IF_IPV6_ADDR}
IPV6_DEFAULTGW=${IF_IPV6_DEFAULTGW}
IPV6_DEFROUTE=${IF_IPV6_DEFROUTE}
IPV6_PEERDNS=${IF_IPV6_PEERDNS}
IPV6_MTU=${IF_IPV6_MTU}
IPV6_ROUTE_METRIC=${IF_IPV6_ROUTE_METRIC}
NAME=${IF_NAME}:${IF_ID}
UUID=${IF_UUID}
EOF
			# Tell dracut module 45ifcfg not to create config for this device in pre-pivot hook
			cp /sysroot/etc/sysconfig/network-scripts/ifcfg-${IF_NAME} /tmp/ifcfg/ifcfg-$IF_NAME
			;;
		NetworkManager) # Add IPADDR<id>= NETMASK<id>= .... to ifcfg-<device> file
			test ! -f /sysroot/etc/sysconfig/network-scripts/ifcfg-${IF_NAME} && logwarn "Primary for dev=${IF_DEV} not defined"

			loginfo "Writing ${IF_NAME} alias #${IF_ID} connection configuration file (device: ${IF_DEV})"
			sed -E '/.*=(|"")$/d' >> /sysroot/etc/sysconfig/network-scripts/ifcfg-${IF_NAME} <<EOF
# Generated by SystemImager (Alias #${IF_ID} for dev=${IF_DEV})
IPADDR${IF_ID}=${IF_IPADDR}
NETMASK${IF_ID}=${IF_NETMASK}
PREFIX${IF_ID}=${IF_PREFIX}
BROADCAST${IF_ID}=${IF_BROADCAST}
GATEWAY${IF_ID}=${IF_GATEWAY}
IPV6ADDR${IF_ID}=${IF_IPV6_ADDR}
EOF
			# Tell dracut module 45ifcfg not to create config for this device in pre-pivot hook (update)
			cp /sysroot/etc/sysconfig/network-scripts/ifcfg-${IF_NAME} /tmp/ifcfg/ifcfg-${IF_NAME}

			;;
		systemd)
			loginfo "Writing ${IF_NAME}.conf connection configuration file (device: ${IF_DEV})"
			if test -n "${IF_IPADDR}"
			then
				sed -E '/.*=(|"")$/d' >> /sysroot/etc/systemd/network/${IF_NAME}.network <<EOF

[Address]
Address=${IF_IPADDR}
Broadcast=${IF_BROADCAST}
EOF
			# TODO: ipv6
			else
				logerror "Can't add alias interface for $IF_DEV: no IP defined!"
			fi
			;;
		*)
			shellout "BUG: xsd allows [${IF_CONTROL}] as network management mechanism but it is not handled by code. Please report!"
			;;
	esac
}

_write_slave() {
	_check_interface
	case "${IF_CONTROL}" in
		legacy|NetworkManager)
			# Create the config file, removing all lines ending with "=" sign or empty value (="") (parameter not set don't need to be set)
			test -f /sysroot/etc/sysconfig/network-scripts/ifcfg-${IF_NAME} && logwarn "Overwriting /sysroot/etc/sysconfig/network-scripts/ifcfg-${IF_NAME}"

			test -n "${IF_BOOTPROTO/none/}" && logerror "bootproto must be none for a slave interface [${IF_NAME}]"
			loginfo "Writing ${IF_NAME} slave connection configuration file (device: ${IF_DEV})"
			sed -E '/.*=(|"")$/d' > /sysroot/etc/sysconfig/network-scripts/ifcfg-${IF_NAME} <<EOF
# Generated by SystemImager
DEVICE=${IF_DEV}
TYPE=${IF_TYPE}
ONBOOT=yes
CONNECTED_MODE=no
BOOTPROTO=none
NAME=${IF_NAME}
UUID=${IF_UUID}
MASTER=${IF_MASTER}
SLAVE=yes
EOF

			# Tell dracut module 45ifcfg not to create config for this device in pre-pivot hook
			cp /sysroot/etc/sysconfig/network-scripts/ifcfg-${IF_NAME} /tmp/ifcfg/ifcfg-$IF_DEV
			;;
		systemd)
			loginfo "Writing ${IF_NAME}.conf slave connection configuration file (device: ${IF_DEV})"
			sed -E '/.*=(|"")$/d' > /sysroot/etc/systemd/network/${IF_NAME}.network <<EOF
[Match]
Name=${IF_DEV}
MACAddress=${IF_HWADDR}
Type=${IF_TYPE}

[Link]
MACAddress=${IF_MACADDR}
MTUBytes=${IF_MTU}

[Network]
Bond=${IF_MASTER}
EOF

test -n "${IF_IPADDR}" && sed -E '/.*=(|"")$/d' >> /sysroot/etc/systemd/network/${IF_NAME}.network <<EOF

[Address]
Address=${IF_IPADDR}
Broadcast=${IF_BROADCAST}
EOF
			;;
		*)
			shellout "BUG: xsd allows [${IF_CONTROL}] as network management mechanism but it is not handled by code. Please report!"
			;;
	esac
}

_add_defroute() {
	test -z "$1" && shellout "You've hit a bug. _add_defroute must be called with ifname as argument."
	test ! -f /sysroot/etc/sysconfig/network-scripts/ifcfg-${1} && shellout "You've hit a bug. Configuration file for $1 does not exists!"
	if test -z "$(grep '^DEFROUTE=' /sysroot/etc/sysconfig/network-scripts/ifcfg-$1)"
	then
		echo "DEFROUTE=yes" >> /sysroot/etc/sysconfig/network-scripts/ifcfg-${1}
	else
		sed -i -e 's/^DEFROUTE=.*$/DEFROUTE=yes' /sysroot/etc/sysconfig/network-scripts/ifcfg-${1}
	fi
}
