#
#	"SystemImager"
#
#   $Id: initrd.rul 4573 2012-12-18 12:42:42Z olahaye74 $
#    vi: set filetype=make:
#
#	Copyright (C) 1999-2011 Brian Elliott Finley
#	Copyright (C) 2002-2004 dann frazier <dannf@hp.com>
#
#	Others who have contributed to this code:
#		Sean Dague <sean@dague.net>
#
#   This program is free software; you can redistribute it and/or modify
#   it under the terms of the GNU General Public License as published by
#   the Free Software Foundation; either version 2 of the License, or
#   (at your option) any later version.
#
#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU General Public License for more details.
#
#   You should have received a copy of the GNU General Public License
#   along with this program; if not, write to the Free Software
#   Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#

INITRD_BUILD_DIR = $(INITRD_DIR)/build_dir

INITRD_BOOTFILES_DIR = $(INITRD_DIR)/boot_files

#DRACUT_BASEDIR = $(shell test -d /usr/lib/dracut && echo '/lib/dracut' || echo '/share/dracut')

LOCAL_DRACUT_BASEDIR = $(INITRD_DIR)/dracutbase

SKEL_FILES = $(shell find $(INITRD_DIR)/skel \
						-not -regex '.*/.svn.*' -and \
						-not -regex '.*/.svn')

PHONY += dracut_basedir:
dracut_basedir:	$(LOCAL_DRACUT_BASEDIR).build

$(LOCAL_DRACUT_BASEDIR).skel:	$(INITRD_DIR)/initrd.rul
	rm -rf $(LOCAL_DRACUT_BASEDIR)
	mkdir -p $(LOCAL_DRACUT_BASEDIR)
	touch $@

$(LOCAL_DRACUT_BASEDIR).prep:	$(LOCAL_DRACUT_BASEDIR).skel
	echo "Creating local dracut environment"
	cp -r $(DRACUT_SYSDIR)/* $(LOCAL_DRACUT_BASEDIR)/
	ln -s /usr/bin/dracut $(LOCAL_DRACUT_BASEDIR)/dracut
	# Remove old systemimager parasit version that we could have copied (if older systemimager is installed on build system).
	rm -rf $(LOCAL_DRACUT_BASEDIR)/modules.d/*systemimager
	# Copy our module localy while doing correct STRINGS replacement.
	make install_dracut DRACUT_MODULES=$(LOCAL_DRACUT_BASEDIR)/modules.d
	test -x /usr/bin/lsinitrd && ln -s /usr/bin/lsinitrd $(LOCAL_DRACUT_BASEDIR)/lsinitrd.sh || echo # only required in newer dracut versions.
	touch $@

$(LOCAL_DRACUT_BASEDIR).build:	$(LOCAL_DRACUT_BASEDIR).prep
	touch $@
	
PHONY += bootfiles_dir
bootfiles_dir:	$(INITRD_BOOTFILES_DIR).build

$(INITRD_BOOTFILES_DIR).skel:	$(INITRD_DIR)/initrd.rul
	rm -rf $(INITRD_BOOTFILES_DIR)
	mkdir -p $(INITRD_BOOTFILES_DIR)
	touch $@

$(INITRD_BOOTFILES_DIR).prep: $(INITRD_BOOTFILES_DIR).skel
	touch $@

$(INITRD_BOOTFILES_DIR).build: $(INITRD_BOOTFILES_DIR).prep $(LOCAL_DRACUT_BASEDIR).build $(INITRD_BUILD_DIR).build
	cd $(LOCAL_DRACUT_BASEDIR); \
	SIS_DATAROOTDIR=$(TOPDIR)/conf SIS_CONFDIR=$(TOPDIR)/etc dracutbasedir=$(LOCAL_DRACUT_BASEDIR) SI_INITRD_TEMPLATE=$(INITRD_DIR)/skel perl -I $(TOPDIR)/lib $(TOPDIR)/sbin/si_mkbootpackage -y --dracut-opts="--local" --destination $(INITRD_BOOTFILES_DIR)
	touch $@

PHONY += build_dir 
build_dir:	$(INITRD_BUILD_DIR).build

$(INITRD_BUILD_DIR).skel:	$(INITRD_DIR)/initrd.rul
	rm -fr $(INITRD_BUILD_DIR)
	mkdir -p $(INITRD_BUILD_DIR)
	mkdir -p -m 0755 $(INITRD_BUILD_DIR)/etc
	mkdir -p -m 0755 $(INITRD_BUILD_DIR)/usr/bin
	mkdir -p -m 0755 $(INITRD_BUILD_DIR)/usr/sbin
	mkdir -p -m 0755 $(INITRD_BUILD_DIR)/usr/lib
	test -e /usr/lib64 && mkdir -p -m 0755 $(INITRD_BUILD_DIR)/usr/lib64 || echo "No /usr/lib64 on this system. Ignored"
	# Create /bin, /sbin, /lib and /lib64 links so nothing we build goest to old /bin, /sbin, /lib and so.
	cd $(INITRD_BUILD_DIR) && ln -s usr/bin ./bin
	cd $(INITRD_BUILD_DIR) && ln -s usr/sbin ./sbin
	cd $(INITRD_BUILD_DIR) && ln -s usr/lib ./lib
	test -e /lib64 && cd $(INITRD_BUILD_DIR) && ln -s usr/lib64 ./lib64||echo "No /lib64 on this system. Ignored"
	touch $@

$(INITRD_BUILD_DIR).prep: $(INITRD_BUILD_DIR).skel $(SKEL_FILES)
	touch $@



$(INITRD_BUILD_DIR).build:  $(INITRD_BUILD_DIR).prep

	# lsb init functions needed by udev init script
	# Copy over text files from the skel directory.
	cp -a $(INITRD_DIR)/skel/* $(INITRD_BUILD_DIR)

	# Install a valid systemimager.conf file so initrd.img can be generated using si_mkbootpackage
	$(SI_INSTALL) -m 644 $(TOPDIR)/etc/systemimager.conf $(INITRD_BUILD_DIR)/etc

	# Copy over modules required prior to retrieving the autoinstall
	# binaries tarball. -BEF-
	cp -a $(INITRD_DIR)/my_modules $(INITRD_BUILD_DIR)
	
	# Add a few config files
	cp -av /etc/inputrc $(INITRD_BUILD_DIR)/etc/inputrc
	#cp -av /etc/printcap $(INITRD_BUILD_DIR)/etc/printcap
	cp -av /etc/localtime $(INITRD_BUILD_DIR)/etc/localtime

	# On non systemd based system, set /init
	# if test ! -d /usr/lib/systemd; then cd $(INITRD_BUILD_DIR) && ln -sf etc/init.d/rcS init; fi
	touch $@


PHONY += install_initrd_template
install_initrd_template:	$(INITRD_BUILD_DIR).build
	mkdir -p $(BOOT_NOARCH_DEST)/initrd_template/
	# Specify explicitely etc and usr. do not install links. they'll conflict with dracut skel
	rsync -a $(INITRD_BUILD_DIR)/etc $(INITRD_BUILD_DIR)/usr $(BOOT_NOARCH_DEST)/initrd_template/

PHONY += install_boot_files
install_boot_files:	$(INITRD_BOOTFILES_DIR).build
	mkdir -p $(BOOT_BIN_DEST)
	rsync -a $(INITRD_BOOTFILES_DIR)/* $(BOOT_BIN_DEST)/

PHONY += build_dir_clean
build_dir_clean:
	rm -rf $(INITRD_BUILD_DIR)
	rm -f  $(INITRD_BUILD_DIR).build
	rm -f  $(INITRD_BUILD_DIR).prep
	rm -f  $(INITRD_BUILD_DIR).skel

PHONY += boot_files_clean
boot_files_clean:
	rm -rf $(INITRD_BOOTFILES_DIR)
	rm -f $(INITRD_BOOTFILES_DIR).build
	rm -f $(INITRD_BOOTFILES_DIR).prep
	rm -f $(INITRD_BOOTFILES_DIR).skel

PHONY += local_dracutbase_clean
local_dracutbase_clean:
	rm -rf $(LOCAL_DRACUT_BASEDIR)
	rm -f $(LOCAL_DRACUT_BASEDIR).build
	rm -f $(LOCAL_DRACUT_BASEDIR).prep
	rm -f $(LOCAL_DRACUT_BASEDIR).skel

PHONY += initrd_clean
initrd_clean:	build_dir_clean boot_files_clean local_dracutbase_clean
	-find . -name "*~" -exec rm -f {} \;

PHONY += initrd_distclean
initrd_distclean:	initrd_clean
