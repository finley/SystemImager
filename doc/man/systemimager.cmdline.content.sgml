  <refentryinfo>
    <address>
      &dhemail;
    </address>
    <author>
      &dhfirstname;
      &dhsurname;
    </author>
    <copyright>
      <year>2018-2019</year>
      <holder>&dhusername;</holder>
    </copyright>
    &dhdate;
  </refentryinfo>
  <refmeta>
    <refentrytitle>SYSTEMIMAGER.CMDLINE</refentrytitle>

    &dhsection;
  </refmeta>
  <refnamediv>
    <refname>systemimager.cmdline</refname>

    <refpurpose>SystemImager imager kernel command line options and associated variables.</refpurpose>
  </refnamediv>

  <refsect1>
  <title>Description</title>
  <para>
    This manual page documents the SystemImager kernel command line parameters and related configuration variables used by the imager. 
  </para>

  <para>
    The systemimager cmdline parameters (and/or) configuration variables tels the imager about some important informations required for imaging. The cmdline parameters are defined in the APPEND line in pxelinux menu and are seen by the imager (initrd.img) thru /proc/cmdline. The associated variables are defined in a configuration file that is read from the server or from a local media (local.cfg). All cmdline parameter related to systemimager configuration are prefixed with "si.". SystemImager imager cmdline parameters can be mixed with standard dracut and kernel parameters (<filename>dracut.cmdline(7)</filename>) and (<filename>bootparam(7)</filename>).
  </para>

  <para>
    "si.*" parameters mentioned without "=" are boolean parameters. They can be turned on/off by setting them to {0|1}. If the assignment with "=" is missing "=1" is implied. For example <citetitle>si.debug</citetitle> can be turned off with <citetitle>si.debug=0</citetitle> or turned on with <citetitle>si.debug=1</citetitle> or <citetitle>si.debug</citetitle>. The last value in the kernel command line is the value, which is honored.
  </para>

  <para>
    Due to the limited size of cmdline parameters (255 chars), it is recommended to use a configuration file for parameters that are mostly common to all clients. The configuration template file is available in <filename>/etc/systemimager/autoinstallconf.template</filename>. Copy it to <filename><replaceable>&lt;image-server&gt;</replaceable>:/var/lib/systemimager/scripts/configs/<replaceable>&lt;name&gt;.conf</replaceable></filename>
  </para>
  <para>
    All parameters are converted to there variable equivalent. They are available by sourcing /tmp/variables.txt in pre-install ans main-install scripts and by sourcing /tmp/post-install/variables.txt when running post-install. (chrooted environment).
  </para>
  <para>
    Note that parameters defined in the configuration file have priority over parameters defined in the kernel command line.
  </para>
  </refsect1>

  <refsect1>
  <title>Standard</title>

  <para>
    This section will list all imager parameters that describe how and what to image.
  </para>

  <variablelist>
    <varlistentry>
      <term>
        <option>si.config=<replaceable>&lt;config file name&gt;.conf</replaceable></option>
      </term>
      <listitem>
        <para>Specify the config file to use. This parameter and the file it designates are not mandatory but it is recommanded to have one. It is read from <filename><replaceable>&lt;image-server&gt;</replaceable>:/var/lib/systemimager/scripts/configs/<replaceable>&lt;name&gt;.conf</replaceable></filename></para>
        <para>If defined, imager will try to load it with optional ".conf" extension.
        <para>If not defined, imager will look in configs dir for possible candidates using "host name", "group name" (see <filename>si_clusterconfig</filename>(8), "base hostname" (node01 -> node), "image name" and "default", all of them with optional <filename>.conf</filename> extension.</para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        <option>si.image-name=<replaceable>&lt;image name&gt;</replaceable></option> (Variable: <option>IMAGENAME</option>)
      </term>
      <listitem>
        <para>Specify the image to use. (no defaults).</para>
        <para>if IMAGENAME is not defined, imager will look in <filename>scripts/cluster.txt</filename> to find image matching hostname.</para>
        <para>cluster.txt is generated by <filename>si_clusterconfig</filename>(8))</para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        <option>si.script-name=<replaceable>&lt;main install script&gt;</replaceable></option> (Variable: <option>SCRIPTNAME</option>)
      </term>
      <listitem>
        <para>Specify the main install script name. This script is optional and is stored in <filename>/var/lib/systemimager/scripts/main-install/</filename> directory on image server. (there is no default).</para>
        <para>If defined, imager will try to run in following order (1st found win): <replaceable>main-install-script</replaceable> or <replaceable>main-install-script.sh</replaceable> or <replaceable>main-install-script.master</replaceable></para>
        <para>If not defined, imager will look in main-install script dir for possible candidates using "host name", "group name" (see <filename>si_clusterconfig</filename>(8), "base hostname" (node01 -> node), "image name" and "default", all of them with optional <filename>.sh</filename> and <filename>.master</filename> extensions.</para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        <option>si.disks-layout=<replaceable>&lt;disk layout file&gt;</replaceable></option> (Variable: <option>DISKS_LAYOUT</option>)
      </term>
      <listitem>
        <para>Specify how the disk must be initialized (partitions and filesystem) and which bootloader and how it must be installer. This parameter is optional, but the file it designate is strictly mandatory. It is highly recommanded to avoid imager trying to find a replacement candidate that could damage some existing data.</para>
        <para>If defined, the file is searched with or without the .xml extension. It is stored on the image server in the <filename>/var/lib/systemimager/scripts/disks-layouts/</filename> directory.</para>
        <para>If not defined, imager will look in disks-layouts dir for possible candidates using "host name", "group name" (see <filename>si_clusterconfig</filename>(8), "base hostname" (node01 -> node), "image name" and "default", all of them with optional <filename>.xml</filename> extension.</para>
        <para></para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        <option>si.network-config=<replaceable>&lt;network configuration file&gt;</replaceable></option> (Variable: <option>NETWORK_CONFIG</option>)
      </term>
      <listitem>
        <para>Specify how the network interfaces must be initialized. This parameter is optional, but the file it designate is strictly mandatory.</para>
        <para>If defined, the file is searched with or without the .xml extension. It is stored on the image server in the <filename>/var/lib/systemimager/scripts/network-configs/</filename> directory.</para>
        <para>If not defined, imager will look in network-configs dir for possible candidates using "host name", "group name" (see <filename>si_clusterconfig</filename>(8), "base hostname" (node01 -> node), "image name" and "default", all of them with optional <filename>.xml</filename> extension.</para>
        <para></para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        <option>si.install-iface=<replaceable>network interface name</replaceable></option> (Variable: <option>INSTALL_IFACE</option>)
      </term>
      <listitem>
        <para>Specify the network interface name wich will be used for imaging.</para>
        <para>If it is not set, SystemImager will use the 1st interface that gets configured (either dhcp or static).</para>
        <para>It is usefull for example when eno1 is configured for some reasons and you want to use eno2 to image the computer.</para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        <option>si.dl-protocol=<replaceable>image transfer protocol</replaceable></option> (Variable: <option>DL_PROTOCOL</option>)
      </term>
      <listitem>
        <para>Specify the network protocol used for image transfer from se image server to the client.</para>
        <para>Available protocols are:</para>
        <itemizedlist>
          <listitem><para><filename>rsync</filename>: Image is transfered from image server to prepared disk using rsync protocol</para></listitem>
          <listitem><para><filename>nfs</filename>: Image is mounted in imager ans transferd to prepared disk using local rsync</para></listitem>
          <listitem><para><filename>torrent</filename>: Image archive is downloaded using bittorrent to staging directory while seeding to other clients the bits and pieces already downloaded, then it is extracted. Seeding stops once the whole imaging process is over. staging dir must be configured.</para></listitem>
          <listitem><para><filename>flamethrower</filename>: Image is downloaded to staging dir using flamthrower client and then extracted.</para></listitem>
          <listitem><para><filename>ssh</filename>: Image is transfered from image server to prepared disk using scp.</para></listitem>
          <listitem><para><filename>docker</filename>: Image is downloaded to prepared disk from image server docker registry</para></listitem>
        </itemizedlist>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        <option>si.monitor-server=<replaceable>&lt;server name&gt;</replaceable></option> (Variable: <option>MONITOR_SERVER</option>)
      </term>
      <listitem>
        <para>Specify name or ip for the monitor server. The monitor server (often image server) is responsible for collecting live client imager logs. Logs are visible thru <filename>si_monitortk</filename>(8)</para>
        <para>Require that <filename>si.monitor-console</filename> is enabled to be of any use.</para>
        <para>Defaults to image server (si.image-server or dhcp server if not set)</para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        <option>si.monitor-port=<replaceable>&lt;monitor tcp port&gt;</replaceable></option> (Variable: <option>MONITOR_PORT</option>)
      </term>
      <listitem>
        <para>Specify the port for the monitor server between 100 and 32000.</para>
        <para>Defaults to 8181</para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        <option>si.monitor-console=<replaceable>&lt;0|1|y|yes|n|no&gt;</replaceable></option> (Variable: <option>MONITOR_CONSOLE=y|n</option>)
      </term>
      <listitem>
        <para>Enable / Disable the imaging log upload to monitor server.</para>
        <para>Defaults to "n"</para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        <option>si.skip-local-cfg=<replaceable>&lt;0|1|y|yes|n|no&gt;</replaceable></option> (Variable: <option>SKIP_LOCAL_CFG=<replaceable>&lt;y|n&gt;</replaceable></option>)
      </term>
      <listitem>
        <para>Tells imager if it should search for a local config file (<filename>local.cfg</filename>) on existing disk partitions or floppy (USB stcik not yet supported).</para>
        <para>Defaults to "n"</para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        <option>si.image-server=<replaceable>&lt;server name&gt;</replaceable></option> (Variable: <option>IMAGE_SERVER</option>)
      </term>
      <listitem>
        <para>Specify name or ip for the image server.</para>
        <para>Defaults to dhcp server</para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        <option>si.log-server-port=<replaceable>&lt;server name&gt;</replaceable></option> (Variable: <option>LOG_SERVER_PORT</option>)
      </term>
      <listitem>
        <para>Specify the syslog server port number</para>
        <para>Default value: 514</para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        <option>si.ssh-client=<replaceable>&lt;0|1|y|yes|n|no&gt;</replaceable></option> (Variable: <option>SSH=<replaceable>&lt;y|n&gt;</replaceable></option>)
      </term>
      <listitem>
        <para>Tells imager if it needs to initiate an ssh tunnel to image server</para>
        <para>Defaults to "n"</para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        <option>si.ssh-download-url=<replaceable>&lt;ssh URL to image&gt;</replaceable></option> (Variable: <option>SSH_DOWNLOAD_URL</option>)
      </term>
      <listitem>
        <para>Specify the ssh URL needed to fetch the image.</para>
        <para>If set, <filename>si.ssh-client</filename> is forced to "y" and <filename>si.dl-protocol</filename> is set to ssh if it is not yet defined.</para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        <option>si.ssh-server=<replaceable>&lt;0|1|y|yes|n|no&gt;</replaceable></option> (Variable: <option>SSHD=<replaceable>&lt;y|n&gt;</replaceable></option>
      </term>
      <listitem>
        <para>Tells imager to start an ssh server so you can push image from server using <filename>si_pushimager</filename>(8)</para>
        <para>Defaults to "n"</para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        <option>si.ssh-user=<replaceable>&lt;ssh login name&gt;</replaceable></option> (Variable: <option>SSH_USER</option>)
      </term>
      <listitem>
        <para>Tells imager which username should be used to create the ssh tunnel. Only used if ssh tunnel is enabled.</para>
        <para>Defaults to "root"</para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        <option>si.flamethrower-directory-portbase=<replaceable>&lt;flamethrower path&gt;</replaceable></option> (Variable: <option>FLAMETHROWER_DIRECTORY_PORTBASE</option>)
      </term>
      <listitem>
        <para>Tells imager the flamethrower path.</para>
        <para>If si.dl-protocol is not set, force it to "flamethrower"</para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        <option>si.tmpfs-staging=<replaceable>&lt;staging path&gt;</replaceable></option> (Variable: <option>TMPFS_STAGING</option>)
      </term>
      <listitem>
        <para>Path to a local staging directory. Should be avoided for protocols which don't requre it.</para>
        <para>Make sure that it points to a filesystem with enought space for image download</para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        <option>si.term=<replaceable>&lt;terminal type&gt;</replaceable></option> (Variable: <option>TERM</option>)
      </term>
      <listitem>
        <para>Set terminal type for client console.</para>
        <para>Defaults to "linux"</para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        <option>si.selinux-relabel=<replaceable>&lt;0|1|y|yes|n|no&gt;</replaceable></option> (Variable: <option>SEL_RELABEL=<replaceable>&lt;y|n&gt;</replaceable></option>)
      </term>
      <listitem>
        <para>Indicates if imager should for a SE Linux relabel after imaging or at next reboot.</para>
        <para>Defaults to "y"</para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        <option>si.post-action=<replaceable>&lt;action&gt;</replaceable></option> (Variable: <option>SI_POST_ACTION</option>)
      </term>
      <listitem>
        <para>Specify what action should be taken after a successful imaging.</para>
        <para>Possible values are:</option>
        <itemizedlist>
          <listitem><para><filename>directboot</filename>: System will continue a normal boot process without rebooting if it is able to (imaged filesystem has modules matching imager kernel). If requirement is not met, action will be a reboot.</para></listitem>
          <listitem><para><filename>reboot</filename>: System will reboot.</para></listitem>
          <listitem><para><filename>shutdown</filename>: System will shut down.</para></listitem>
          <listitem><para><filename>poweroff</filename>: System will shut down and power off.</para></listitem>
          <listitem><para><filename>kexec</filename>: System will reboot thru kexec (without going thru BIOS boot process)</para></listitem>
          <listitem><para><filename>shell</filename>: System will drop a shell for possible inspection. See si_inspectclient(8) for more information. exitting this shell will poser off the system. Instead of exitting, you can type reboot or shutdown.</para></listitem>
        </itemizedlist>
        <para>Defaults to "directboot"</para>
      </listitem>
    </varlistentry>
  </variablelist>
  </refsect1>

  <refsect1>
  <title>Misc</title>
  <para>
    This section Will list all misc parameters.
  </para>

  <variablelist>
    <varlistentry>
      <term>
        <option>si.debug=<replaceable>&lt;0|1|y|yes|n|no&gt;</replaceable></option> (Variable: <option>DEBUG=&lt;y|n&gt;</option>)
      </term>
      <listitem>
        <para>enable/disable debug logs</para>
        <para>Defaults to "n"</para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        <option>si.break=<replaceable>&lt;break step&gt;</replaceable></option> (Variable: none)
      </term>
      <listitem>
        <para>Dracut breakpoint similar to rd.break dracut breakpoint (<filename>dracut.cmdline(7)</filename>. Its use is aimed a imager debugging. You can use multiple systemimager (si.break=) and dracut (rd.break=) breakpoints at the same time.</para>
        <para>This parameter can be specified multiple times. Each time a breakpoint is encountered, a shell is dropped. Exitting the shell will continue imaging process.</para>
        <para>Available breakpoints</para>
        <itemizedlist>
          <listitem><para><filename>parse-localcfg</filename>: Breaks before trying to find and read a local.cfg file.</para></listitem>
          <listitem><para><filename>network-infos</filename>: Breaks before reading informations about network that was setup by dracut logic.</para></listitem>
          <listitem><para><filename>ping</filename>: Breaks before doing a ping test.</para></listitem>
          <listitem><para><filename>download-scripts</filename>: Breaks before trying to retreive /scripts directory.</para></listitem>
          <listitem><para><filename>monitor</filename>: Breaks before starting console server and sending init timestamp to monitor server.</para></listitem>
          <listitem><para><filename>deploy</filename>: Breaks before starting client deployment.</para></listitem>
          <listitem><para><filename>pre-install</filename>: Breaks before running pre-install scripts.</para></listitem>
          <listitem><para><filename>prepare-disks</filename>: Breaks before initializing disks (partition/format/mount to /sysroot).</para></listitem>
          <listitem><para><filename>main-install</filename>: Breaks before running main install script.</para></listitem>
          <listitem><para><filename>download-image</filename>: Breaks before downloading image.</para></listitem>
          <listitem><para><filename>extract-image</filename>: Breaks before extracting the image.</para></listitem>
          <listitem><para><filename>install-overrides</filename>: Breaks before installing overrides.</para></listitem>
          <listitem><para><filename>install-configs</filename>: Breaks before installing configurations (lvm/dmraid/...).</para></listitem>
          <listitem><para><filename>configure-network</filename>: Breaks before configuring network.</para></listitem>
          <listitem><para><filename>boot-loader</filename>: Breaks for installing boot loader.</para></listitem>
          <listitem><para><filename>post-install</filename>: Breaks before running post install scripts.</para></listitem>
          <listitem><para><filename>se-linux</filename>: Breaks before enforcing SE Linux relabel.</para></listitem>
          <listitem><para><filename>umount-client</filename>: Breaks before unmounting /sysroot underlying client filesystems.</para></listitem>
          <listitem><para><filename>terminate-transfer</filename>: Breaks before stopping transfer daemons (ssh tunnels, torrent seeders, monitor messages, ...).</para></listitem>
          <listitem><para><filename>finished</filename>: Breaks before leaving initqueue and giving control back to dracut boot process.</para></listitem>
        </itemizedlist>
        <para>Defaults to ""</para>
      </listitem>
    </varlistentry>

  </variablelist>
  </refsect1>

  <refsect1>
  <title>Deprecated, renamed Options</title>
  <para>
    This section Will list deprecated and renamed cmdline imager options. These options should be avoided and are supported for compatibility.
  </para>

  <itemizedlist>
    <listitem><para>IMAGENAME -> si.image-name</para></listitem>
    <listitem><para>SCRIPTNAME -> si.script-name</para></listitem>
    <listitem><para>DISKS_LAYOUT -> si.disks-layout</para></listitem>
    <listitem><para>MONITOR_SERVER -> si.monitor-server</para></listitem>
    <listitem><para>MONITOR_CONSOLE -> si.monitor-console</para></listitem>
    <listitem><para>SSH -> si.ssh-client</para></listitem>
    <listitem><para>SSH_DOWNLOAD_URL -> si.ssh-download-url</para></listitem>
    <listitem><para>SSHD -> si.ssh-server</para></listitem>
  </itemizedlist>
  </refsect1>

  <refsect1>
  <title>Deprecated options available thru DHCP</title>
  <para>
    This section Will list options that can be set in DHCP. This method of specifying imaging options is deprecated but still supported. You should avoid using it as SystemImager DHCP options are not registered and thus may conflict with new standards.
  </para>

  <itemizedlist>
    <listitem><para>option-140: (Image server) -> si.image-server (also defaults to DHCP server (very deprecated))</para></listitem>
    <listitem><para>option-141: (Log server port) -> si.log-server-port</para></listitem>
    <listitem><para>option-142: (SSH download URL) -> si.ssh-download-url</para></listitem>
    <listitem><para>option-143: (Flamethrower port base) -> si.flamethrower-directory-portbase</para></listitem>
    <listitem><para>option-144: (tmpfs staging) -> si.tmpfs-staging</para></listitem>
  </itemizedlist>
  </refsect1>


  <refsect1>

    <title>LIMITATIONS</title>

    <para>
        /proc/cmdline is limited in size (255 chars). It's preferable to limit the cmdline parameter to the minimum, using config file for most parameters (see <filename>systemimager.config</filename>(5).)
    </para>

  </refsect1>


  <refsect1>

    <title>SEE ALSO</title>

    <para>
      <filename>dracut.cmdline(7)</filename>, <filename>bootparam(7)</filename>
    </para>

    <para>
      More details can be found in the <citetitle>SystemImager manual.</citetitle>
    </para>

  </refsect1>


  <refsect1>
    <title>AUTHOR</title>

    <para>This manual page was compiled by &dhusername; <&dhemail;> for
      the &distro; system (but may be used by others).</para>

    <!-- <para>Permission is granted to copy, distribute and/or modify
      this document under the terms of the <acronym>GNU</acronym> Free
      Documentation License, Version 1.1 or any later version
      published by the Free Software Foundation; with no Invariant
      Sections, no Front-Cover Texts and no Back-Cover Texts.  A copy
      of the license can be found under
      <filename>/usr/share/common-licenses/FDL</filename>.</para> -->

  </refsect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:2
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:nil
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->
